type Comment {
          eventId: ID!
          commentId: String!
          content: String!
          createdAt: String!
        }

        type CommentConnection {
          items: [Comment]
          nextToken: String
        }

        type Event {
          id: ID!
          name: String
          where: String
          when: String
          description: String
          comments(limit: Int, nextToken: String): CommentConnection
        }

        type EventConnection {
          items: [Event]
          nextToken: String
        }

        type Mutation {
          createEvent(
            name: String!,
            when: String!,
            where: String!,
            description: String!
          ): Event
          deleteEvent(id: ID!): Event
          commentOnEvent(eventId: ID!, content: String!, createdAt: String!): Comment
        }

        type Query {
          getEvent(id: ID!): Event
          listEvents(limit: Int, nextToken: String): EventConnection
        }

        type Subscription {
          subscribeToEventComments(eventId: String!): Comment
            @aws_subscribe(mutations: ["commentOnEvent"])
        }

        schema {
          query: Query
          mutation: Mutation
          subscription: Subscription
        }